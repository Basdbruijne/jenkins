# Run the jobs from order listed in plan
sequential: yes

plan:
  - env:
      - SNAP_VERSION=1.16/stable
      - JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
      - JUJU_DEPLOY_CHANNEL=candidate
      - JUJU_CLOUD=aws/us-east-1
      - JUJU_CONTROLLER=release-ck-bugfix
      - JUJU_MODEL=release-ck-bugfix-model
    if: '$(python3 jobs/release/release-tracker.py --release-id $RELEASE_ID get-phase --name validate)'
    before-script:
      - juju kill-controller -y $JUJU_CONTROLLER || true
      - !include jobs/spec-helpers/bootstrap.yml
    script:
      - !include jobs/spec-helpers/pytest.yml
    after-script:
      - !include jobs/spec-helpers/collect.yml
      - juju destroy-controller -y --destroy-all-models --destroy-storage $JUJU_CONTROLLER
    on-success:
      - python3 jobs/release/release-tracker.py --release-id $RELEASE_ID set-phase --name validate --result pass
    on-failure:
      - python3 jobs/release/release-tracker.py --release-id $RELEASE_ID set-phase --name validate --result fail
    tags: [validate-ck-candidate]
  - env:
      - SNAP_VERSION=1.15/stable
      - SNAP_VERSION_UPGRADE_TO=1.16/stable
      - JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
      - JUJU_DEPLOY_CHANNEL=candidate
      - JUJU_CLOUD=aws/us-east-1
      - JUJU_CONTROLLER=validate-ck-bugfix-upgrade
      - JUJU_MODEL=validate-ck-bugfix-upgrade-model
    if: '$(python3 jobs/release/release-tracker.py --release-id $RELEASE_ID get-phase --name validate-upgrade)'
    before-script:
      - juju kill-controller -y $JUJU_CONTROLLER || true
      - !include jobs/spec-helpers/bootstrap.yml
    script:
      - |
        #!/bin/bash
        set -x
        pytest "$INTEGRATION_TEST_PATH"/validation.py \
           --upgrade-snap-channel "$SNAP_VERSION_UPGRADE_TO" \
           --upgrade-charm-channel edge \
           --cloud "$JUJU_CLOUD" \
           --model "$JUJU_MODEL" \
           --controller "$JUJU_CONTROLLER"
    after-script:
      - !include jobs/spec-helpers/collect.yml
      - juju destroy-controller -y --destroy-all-models --destroy-storage $JUJU_CONTROLLER
    on-success:
      - python3 jobs/release/release-tracker.py --release-id $RELEASE_ID set-phase --name validate-upgrade --result pass
    on-failure:
      - python3 jobs/release/release-tracker.py --release-id $RELEASE_ID set-phase --name validate-upgrade --result fail
    tags: [validate-ck-candidate-upgrade]


meta:
  mkdocs:
    destination:
      - "releases/bugfix/index.md"
  name: Creating a bugfix release
  description: |
    Performs a Kubernetes bugfix release, which includes validation across the base
    deployment as well as variations including calico, tigera, vault, nvidia, and
    ceph.
  long-description: |
    ## Bugfix Release Process

    ### Cherry-pick fixes from master into stable branches

    ### Document release notes

    - Bugfixes
    - Enhancements
    - Known Limitations/Issues

    ### Tag existing stable branches with bugfix release tag

    **Job**: https://jenkins.canonical.com/k8s/job/sync-stable-tag-bugfix-rev/

    This will tag all stable repos with the k8s version and bugfix revision
    associated, for example, the first bugfix release of 1.16 would be
    **1.16+ck1**

    #### Charm tag options

    ![bugfix tag options](bugfix-tag-options.png)

    ### Run the **build-charms** job

    **Job**: https://jenkins.canonical.com/k8s/job/build-charms/

    This will build and promote the stable charms to candidate channel for testing.

    #### Charm build options

    ![build charm options](bugfix-options.png)

    ### Run **release-charm-bugfix** job

    **Job**: https://jenkins.canonical.com/k8s/job/release-charm-bugfix/

    This validates the deployment using the charms from candidate channel.

    ### Notify Solutions QA

    Notify solutions-qa that CK is ready to be run through their tests. Once
    that is complete and relayed to us, we can start the release to stable.

    ### Promote charms from **candidate** to **stable**

    **Job**: https://jenkins.canonical.com/k8s/job/promote-charms/

    This job takes a tag, from_channel, and to_channel. The tag defaults to `k8s` so
    it will only promote the necessary charms that make up charmed-kuberneetes (the
    others are kubeflow related).

    ### Promote bundles from **candidate** to **stable**

    **Job**: https://jenkins.canonical.com/k8s/job/promote-bundles/

    Same as charm promotion.

    ### Verify no snap promotions required

    In some cases snaps like **cdk-addons** will need to be promote to the
    correct track/channels after the bugfix is released.

    ### Send announcement to k8s-crew with any relevant information.
