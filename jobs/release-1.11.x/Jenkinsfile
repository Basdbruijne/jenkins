@Library('juju-pipeline@master') _

pipeline {
    agent {
        label 'runner'
    }
    /* XXX: Global $PATH setting doesn't translate properly in pipelines
     https://stackoverflow.com/questions/43987005/jenkins-does-not-recognize-command-sh
     */
    environment {
        PATH = "/snap/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin"
        CDKBOT_TOKEN = credentials('cdkbot')
        GITHUB_CREDS = credentials('cdkbot_github')
    }
    options {
        ansiColor('xterm')
        timestamps()
    }
    stages {
        stage('Build Report') {
            steps {
                // Builds a report of current snap, bundle, and charm revisions
                echo "Building report"
            }
        }

        stage('Validate: Conformance') {
            parallel {
                stage('Canonical Kubernetes') {
                    options {
                        timeout(time: 2, unit: 'HOURS')
                    }

                    steps {
                        build job:"conformance-v1.11.x-canonical-kubernetes-${params.cloud}"
                    }
                }
                stage('Kubernetes Core') {
                    options {
                        timeout(time: 2, unit: 'HOURS')
                    }

                    steps {
                        build job:"conformance-v1.11.x-kubernetes-core-${params.cloud}"
                    }
                }
            }
        }

        stage('Validate: Minor Upgrades v1.9.x-v1.11.x') {
            parallel {
                stage('Canonical Kubernetes') {
                    options {
                        timeout(time: 2, unit: 'HOURS')
                    }
                    steps {
                        build job:"validate-minor-upgrade-v1.9.x-v1.11.x-canonical-kubernetes-${params.cloud}"
                    }
                }
                stage('Kubernetes Core') {
                    options {
                        timeout(time: 2, unit: 'HOURS')
                    }
                    steps {
                        build job:"validate-minor-upgrade-v1.9.x-v1.11.x-kubernetes-core-${params.cloud}"
                    }
                }
            }
        }
        stage('Validate: Minor Upgrades v1.10.x-v1.11.x') {
            parallel {
                stage('Canonical Kubernetes') {
                    options {
                        timeout(time: 2, unit: 'HOURS')
                    }
                    steps {
                        build job:"validate-minor-upgrade-v1.10.x-v1.11.x-canonical-kubernetes-${params.cloud}"
                    }
                }
                stage('Kubernetes Core') {
                    options {
                        timeout(time: 2, unit: 'HOURS')
                    }
                    steps {
                        build job:"validate-minor-upgrade-v1.10.x-v1.11.x-canonical-kubernetes-${params.cloud}"
                    }
                }
            }
        }
        stage('Validate: Patch Upgrades') {
            parallel {
                stage('Canonical Kubernetes') {
                    options {
                        timeout(time: 2, unit: 'HOURS')
                    }
                    steps {
                        build job: "validate-v1.11.x-canonical-kubernetes-${params.cloud}",
                            parameters: [string(name: 'version_overlay', value:'jobs/overlays/1.11-stable-overlay.yaml'),
                                         booleanParam(name:'perform_upgrade', value: true),
                                         string(name:'snap_channel', value: '1.11/edge')]
                    }
                }
                stage('Kubernetes Core') {
                    options {
                        timeout(time: 2, unit: 'HOURS')
                    }
                    steps {
                        build job: "validate-v1.11.x-kubernetes-core-${params.cloud}",
                            parameters: [string(name: 'version_overlay', value:'jobs/overlays/1.11-stable-overlay.yaml'),
                                         booleanParam(name:'perform_upgrade', value: true),
                                         string(name:'snap_channel', value: '1.11/edge')]
                    }
                }
            }
        }
        stage('Promote to snap/charm stores') {
            when {
                expression { params.promote }
            }

            steps {
                sh "snapcraft login --with ${env.CDKBOT_TOKEN}"
                sh "PROMOTE_FROM='${params.promote_from}' PROMOTE_TO='${params.promote_to}' GH_USER='${env.GITHUB_CREDS_USR}' GH_TOKEN='${env.GITHUB_CREDS_PSW}' bash jobs/build-snaps/promote.sh"
                sh "snapcraft logout"
                script {
                    def charms_to_promote = [
                        "cs:~containers/easyrsa",
                        "cs:~containers/etcd",
                        "cs:~containers/flannel",
                        "cs:~containers/calico",
                        "cs:~containers/canal",
                        "cs:~containers/kubernetes-master",
                        "cs:~containers/kubernetes-worker",
                        "cs:~containers/kubeapi-load-balancer",
                        "cs:~containers/kubernetes-e2e",
                        "cs:~containers/kubernetes-core",
                        "cs:~containers/canonical-kubernetes",
                        "cs:~containers/canonical-kubernetes-elastic",
                        "cs:~containers/kubernetes-calico",
                        "cs:~containers/canonical-kubernetes-canal"
                    ]

                    charms_to_promote.each { charm ->
                        sh script:String.format("CHARM='%s' FROM_CHANNEL='%s' TO_CHANNEL='%s' jobs/build-charms/promote-charm.sh", charm, 'edge', 'beta')
                        sh script:String.format("CHARM='%s' FROM_CHANNEL='%s' TO_CHANNEL='%s' jobs/build-charms/promote-charm.sh", charm, 'edge', 'candidate')
                        sh script:String.format("CHARM='%s' FROM_CHANNEL='%s' TO_CHANNEL='%s' jobs/build-charms/promote-charm.sh", charm, 'edge', 'stable')
                    }
                }
            }
        }
    }
}
