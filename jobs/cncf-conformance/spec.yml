meta:
  name: Verify CK Conformance
  description: |
    Verifies that CK passes CNCF conformance spec
  mkdocs:
    destination:
      - "validations/conformance/index.md"

plan:
  - env:
      - JUJU_DEPLOY_CHANNEL=stable
      - SNAP_VERSION=1.16/stable
      - JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
      - JUJU_CLOUD=aws/us-east-1
      - JUJU_CONTROLLER=validate-ck-conformance
      - JUJU_MODEL=validate-conformance
    before-script:
      - juju:
          cloud: $JUJU_CLOUD
          controller: $JUJU_CONTROLLER
          model: $JUJU_MODEL
          bootstrap:
            debug: no
            model-default:
              - test-mode=true
              - resource-tags=owner=k8sci
            replace-controller: yes
            constraints: "arch=amd64"
          deploy:
            bundle: $JUJU_DEPLOY_BUNDLE
            channel: $JUJU_DEPLOY_CHANNEL
            overlay: |
              applications:
                kubernetes-master:
                  options:
                    channel: $SNAP_VERSION
                kubernetes-worker:
                  options:
                    channel: $SNAP_VERSION
            wait: yes
            timeout: 7200
    script:
      - |
        #!/bin/bash
        set -eux
        mkdir -p $HOME/.kube
        juju scp -m $JUJU_CONTROLLER:$JUJU_MODEL kubernetes-master/0:config $HOME/.kube/
        export RBAC_ENABLED=$(kubectl api-versions | grep \"rbac.authorization.k8s.io/v1beta1\" -c)
        kubectl version
        sonobuoy version
        sonobuoy run
      - runner:
          cmd: sonobuoy status|grep -q 'Sonobuoy has completed'
          timeout: 10800
          back-off: 15
          wait-for-success: yes
      - runner:
          description: Download results
          script: |
            #!/bin/bash
            set -eux
            sonobuoy retrieve results/.
            kubectl version
          wait-for-success: yes
          back-off: 5
          retries: 5

    after-script:
      - runner:
          script: |
            #!/bin/bash
            set -x
            python3 jobs/infra/collect-debug.py push 'cdk_field_agent' results*.tar.gz
            python3 jobs/infra/collect-debug.py push 'conformance' results/*.tar.gz
            python3 jobs/infra/collect-debug.py push 'build_log' ogc.log
            python3 jobs/infra/collect-debug.py push 'metadata' metadata.json
            python3 jobs/infra/collect-debug.py push 'job_result' *job.json
            python3 jobs/infra/collect-debug.py set-key 'snap_version' "$SNAP_VERSION"
            python3 jobs/infra/collect-debug.py save-meta metadata.json
            juju destroy-controller -y \
               --destroy-all-models --destroy-storage $JUJU_CONTROLLER
