@Library('juju-pipeline@master') _

def juju_model = String.format("%s-%s", params.model, uuid())

pipeline {
    agent {
        label params.build_node
    }
    /* XXX: Global $PATH setting doesn't translate properly in pipelines
     https://stackoverflow.com/questions/43987005/jenkins-does-not-recognize-command-sh
     */
    environment {
        PATH = "/snap/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin"
    }
    options {
        ansiColor('xterm')
        timestamps()
    }
    stages {
        stage('Deploy: K8s') {
            options {
                timeout(time: 1, unit: 'HOURS')
            }
            steps {
                sh "ip addr"
                sh "juju kill-controller -y ${params.controller} || true"
                sh "juju bootstrap ${params.cloud} ${params.controller} --debug"
                sh "juju add-model -c ${params.controller} ${juju_model}"
                sh "cat jobs/validate-alt-arch/lxd-profile.yaml | sed -e \"s/##MODEL##/${juju_model}/\" | sudo lxc profile edit juju-${juju_model}"
                sh "sudo lxc profile show juju-${juju_model}"
                sh "exit 1"
                deployCDK(controller: params.controller,
                          model: juju_model,
                          cloud: params.cloud,
                          bundle: "cs:~containers/${params.bundle}",
                          version_overlay: params.version_overlay,
                          bundle_channel: params.bundle_channel,
                          disable_add_model: true)
            }
        }

        stage('Validate') {
            options {
                timeout(time: 2, unit: 'HOURS')
            }

            when {
                expression { !params.perform_upgrade }
            }
            steps {
                dir('jobs') {
                    sh "CONTROLLER=${params.controller} MODEL=${juju_model} tox -e py36 -- pytest -v -s --junit-xml=validate.xml integration/test_cdk.py::test_validate"
                }
            }
        }
        stage('Validate Upgrade') {
            options {
                timeout(time: 2, unit: 'HOURS')
            }
            when {
                expression { params.perform_upgrade }
            }
            steps {
                dir('jobs') {
                    sh "TEST_SNAP_CHANNEL=${params.snap_channel} CONTROLLER=${params.controller} MODEL=${juju_model} tox -e py36 -- pytest -v -s --junit-xml=validate.xml integration/test_cdk.py::test_upgrade"
                }
            }
        }
    }
    post {
        success {
            junit 'jobs/*.xml, jobs/logs/**/**/*.xml'
            archiveArtifacts artifacts: 'jobs/logs/*', fingerprint: true
        }
        always {
            sh "sudo lxc profile show default"
            collectDebug(params.controller,
                         juju_model)
            sh "juju kill-controller -y ${params.controller}"
        }
    }
}
