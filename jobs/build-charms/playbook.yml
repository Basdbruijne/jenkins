---
- hosts: all
#  connection: local
  gather_facts: yes
  become: true
  tasks:
    - name: install apt deps
      shell: |
        apt-get update
        apt-get install -qyf \
          docker.io \
          jq \
          snapd \
          curl \
          wget \
          python3-dev \
          python3-pip
    - name: remove apt deps
      shell: |
          apt remove --autoremove -qyf tox
      ignore_errors: yes
    - name: upgrade system pip
      shell: |
        pip3 install pip tox --upgrade
    - name: install snap deps
      command: "snap install {{item}}"
      ignore_errors: yes
      loop:
        - "charm --classic --edge"
        - "yq"
    - name: copy ssh creds
      copy:
        src: "{{ lookup('env', 'CDKBOTSSHCREDS') }}"
        dest: /root/.ssh/cdkbot_rsa
        owner: root
        group: root
        mode: 0600
        force: yes
    - name: copy charm creds
      copy:
        src: "{{ lookup('env', 'CHARMCREDS') }}"
        dest: /root/.go-cookies
        owner: root
        group: root
        mode: 0644
        force: no
    - name: create aws dir
      file:
        path: /root/.aws
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: copy aws creds
      copy:
        src: "{{ lookup('env', 'AWSCREDS') }}"
        dest: /root/.aws/credentials
        owner: root
        group: root
        mode: 0644
        force: yes
    - name: create juju dir
      file:
        path: /root/.local/share/juju
        state: directory
        mode: 0755
    - name: copy juju credentials
      unarchive:
        src: "{{ lookup('env', 'JUJUCREDS') }}"
        dest: /root/.local/share/juju
    - name: copy juju clouds
      unarchive:
        src: "{{ lookup('env', 'JUJUCLOUDS') }}"
        dest: /root/.local/share/juju
    - name: copy sso creds
      copy:
        src: "{{ lookup('env', 'SSOCREDS') }}"
        dest: /root/.local/share/juju/store-usso-token
        owner: root
        group: root
        mode: 0644
    - name: login to charmstore
      command: "charm login -B"
    - name: clone jenkins repo
      shell: |
        git clone https://github.com/charmed-kubernetes/jenkins
    - name: copy run script
      template:
        src: "run.sh.j2"
        dest: "/root/jenkins/run.sh"
        owner: root
        mode: 775
