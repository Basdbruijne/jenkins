plan:
  - &BASE_JOB
    env:
      - SNAP_VERSION=1.17/edge
      - JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
      - JUJU_DEPLOY_CHANNEL=edge
      - JUJU_CLOUD=aws/us-east-1
      - JUJU_CONTROLLER=validate-ck-aws-iam
      - JUJU_MODEL=validate-aws-iam-model
    before-script:
      - juju:
          cloud: $JUJU_CLOUD
          controller: $JUJU_CONTROLLER
          model: $JUJU_MODEL
          bootstrap:
            constraints: "arch=amd64"
            debug: no
            replace-controller: yes
            model-default:
              - test-mode=true
              - resource-tags=owner=k8sci
          deploy:
            reuse: no
            bundle: $JUJU_DEPLOY_BUNDLE
            overlay: |
              applications:
                kubernetes-master:
                  options:
                    channel: $SNAP_VERSION
                kubernetes-worker:
                  options:
                    channel: $SNAP_VERSION
            wait: yes
            timeout: 7200
            channel: $JUJU_DEPLOY_CHANNEL

    script:
      - aws iam delete-role --role-name KubernetesAdmin || true
      - |
        #!/bin/bash
        set -x

        # get your account ID
        # ACCOUNT_ID=$(aws sts get-caller-identity --output text --query 'Account')

        # define a role trust policy that opens the role to users in your account (limited by IAM policy)

        # POLICY=$(echo -n '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"AWS":"arn:aws:iam::'; echo -n "$ACCOUNT_ID"; echo -n ':root"},"Action":"sts:AssumeRole","Condition":{}}]}')

        # create a role named KubernetesAdmin (will print the new role's ARN)
        # export TEST_ARN=$(aws iam create-role --role-name KubernetesAdmin --description "Kubernetes administrator role (for AWS IAM Authenticator for Kubernetes)." --assume-role-policy-document "$POLICY" --output text --query 'Role.Arn')

        pytest $INTEGRATION_TEST_PATH/test_aws_iam.py \
           --cloud $JUJU_CLOUD \
           --model $JUJU_MODEL \
           --controller $JUJU_CONTROLLER 2>&1

    after-script:
      - aws iam delete-role --role-name KubernetesAdmin || true
      - |
        #!/bin/bash
        set -x

        wget https://raw.githubusercontent.com/juju-solutions/cdk-field-agent/master/collect.py
        python3 collect.py -m $JUJU_CONTROLLER:$JUJU_MODEL
        python3 jobs/infra/collect-debug.py save-meta metadata.json
        python3 jobs/infra/collect-debug.py push 'cdk_field_agent' results*.tar.gz
        python3 jobs/infra/collect-debug.py push 'build_log' ogc.log
        python3 jobs/infra/collect-debug.py push 'metadata' metadata.json
        python3 jobs/infra/collect-debug.py push 'job_result' *job.json
        python3 jobs/infra/collect-debug.py set-key 'snap_version' "$SNAP_VERSION"
        juju-crashdump -a debug-layer -a config -m "$JUJU_CONTROLLER:$JUJU_MODEL" || true
        python3 jobs/infra/collect-debug.py push 'results_file' juju-crashdump* || true

        juju destroy-controller -y \
           --destroy-all-models --destroy-storage $JUJU_CONTROLLER --debug
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.16/edge
      - JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
      - JUJU_DEPLOY_CHANNEL=edge
      - JUJU_CLOUD=aws/us-east-1
      - JUJU_CONTROLLER=validate-ck-aws-iam
      - JUJU_MODEL=validate-model
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.16/stable
      - JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
      - JUJU_DEPLOY_CHANNEL=edge
      - JUJU_CLOUD=aws/us-east-1
      - JUJU_CONTROLLER=validate-ck-aws-iam
      - JUJU_MODEL=validate-model
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.15/edge
      - JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
      - JUJU_DEPLOY_CHANNEL=edge
      - JUJU_CLOUD=aws/us-east-1
      - JUJU_CONTROLLER=validate-ck-aws-iam
      - JUJU_MODEL=validate-model

meta:
  name: Verify CK with AWS IAM
  description: |
    Verifies that CK with AWS IAM passes integration tests
  mkdocs:
    destination:
      - "validations/ck/aws-iam.md"
    jenkins-job-builder:
      jobs:
        - jobs/ci-master.yaml
