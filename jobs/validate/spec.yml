plan:
  - &BASE_JOB
    env:
      - SNAP_VERSION=1.16/edge
      - JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
      - JUJU_DEPLOY_CHANNEL=edge
      - JUJU_CLOUD=aws/us-east-2
      - JUJU_CONTROLLER=validate-ck
      - JUJU_MODEL=validate-model
    before-script:
      - juju:
          cloud: $JUJU_CLOUD
          controller: $JUJU_CONTROLLER
          model: $JUJU_MODEL
          bootstrap:
            debug: no
            constraints: 'arch=amd64'
            replace-controller: yes
            model-default:
              - test-mode=true
          deploy:
            reuse: no
            bundle: $JUJU_DEPLOY_BUNDLE
            overlay: |
              applications:
                kubernetes-master:
                  options:
                    channel: $SNAP_VERSION
                kubernetes-worker:
                  options:
                    channel: $SNAP_VERSION
            wait: yes
            channel: $JUJU_DEPLOY_CHANNEL

    script:
      - |
        #!/bin/bash
        set -eux
        pytest $INTEGRATION_TEST_PATH/validation.py \
                 --cloud $JUJU_CLOUD \
                 --controller $JUJU_CONTROLLER \
                 --model $JUJU_MODEL
    after-script:
      - wget https://raw.githubusercontent.com/juju-solutions/cdk-field-agent/master/collect.py
      - python3 collect.py -m $JUJU_CONTROLLER:$JUJU_MODEL
      - python3 jobs/infra/collect-debug.py push 'cdk_field_agent' results*.tar.gz
      - juju-crashdump -a debug-layer -a config -m "$JUJU_CONTROLLER:$JUJU_MODEL" || true
      - python3 jobs/infra/collect-debug.py push 'results_file' juju-crashdump* || true
      - python3 jobs/infra/collect-debug.py push 'build_log' ogc.log
      - python3 jobs/infra/collect-debug.py push 'metadata' metadata.json
      - python3 jobs/infra/collect-debug.py push 'job_result' *job.json
      - python3 jobs/infra/collect-debug.py set-key 'snap_version' "$SNAP_VERSION"
      - python3 jobs/infra/collect-debug.py save-meta metadata.json || true
      - juju destroy-controller -y --destroy-all-models --destroy-storage $JUJU_CONTROLLER --debug
    tags: [core]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.15/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
    tags: [core]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.14/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
    tags: [core]
  - <<: *BASE_JOB
    env:
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - SNAP_VERSION=1.13/edge
    tags: [core]

  # vault
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.16/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-vault
    tags: [vault]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.15/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-vault
    tags: [vault]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.14/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-vault
    tags: [vault]
  - <<: *BASE_JOB
    env:
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-vault
      - SNAP_VERSION=1.13/edge
    tags: [vault]

  # ceph
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.16/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-ceph
    script:
      - pytest $INTEGRATION_TEST_PATH/test_ceph.py::test_ceph
    tags: [ceph]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.15/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-ceph
    script:
      - pytest $INTEGRATION_TEST_PATH/test_ceph.py::test_ceph
    tags: [ceph]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.14/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-ceph
    script:
      - pytest $INTEGRATION_TEST_PATH/test_ceph.py::test_ceph
    tags: [ceph]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.13/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-ceph
    script:
      - pytest $INTEGRATION_TEST_PATH/test_ceph.py::test_ceph
    tags: [ceph]

  # nvidia
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.16/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-nvidia
    before-script:
      - juju:
          cloud: $JUJU_CLOUD
          controller: $JUJU_CONTROLLER
          model: $JUJU_MODEL
          bootstrap:
            debug: no
            replace-controller: yes
            model-default:
              - test-mode=true
          deploy:
            reuse: no
            bundle: $JUJU_DEPLOY_BUNDLE
            overlay: |
              applications:
                kubernetes-master:
                  constraints: cores=2 mem=8G root-disk=16G
                  options:
                    channel: $SNAP_VERSION
                kubernetes-worker:
                  constraints: instance-type=p2.xlarge
                  options:
                    channel: $SNAP_VERSION
            wait: yes
            channel: $JUJU_DEPLOY_CHANNEL
    tags: [nvidia]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.15/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-nvidia
    before-script:
      - juju:
          cloud: $JUJU_CLOUD
          controller: $JUJU_CONTROLLER
          model: $JUJU_MODEL
          bootstrap:
            debug: no
            replace-controller: yes
            model-default:
              - test-mode=true
          deploy:
            reuse: no
            bundle: $JUJU_DEPLOY_BUNDLE
            overlay: |
              applications:
                kubernetes-master:
                  constraints: cores=2 mem=8G root-disk=16G
                  options:
                    channel: $SNAP_VERSION
                kubernetes-worker:
                  constraints: instance-type=p2.xlarge
                  options:
                    channel: $SNAP_VERSION
            wait: yes
            channel: $JUJU_DEPLOY_CHANNEL
    tags: [nvidia]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.14/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-nvidia
    before-script:
      - juju:
          cloud: $JUJU_CLOUD
          controller: $JUJU_CONTROLLER
          model: $JUJU_MODEL
          bootstrap:
            debug: no
            replace-controller: yes
            model-default:
              - test-mode=true
          deploy:
            reuse: no
            bundle: $JUJU_DEPLOY_BUNDLE
            overlay: |
              applications:
                kubernetes-master:
                  constraints: cores=2 mem=8G root-disk=16G
                  options:
                    channel: $SNAP_VERSION
                kubernetes-worker:
                  constraints: instance-type=p2.xlarge
                  options:
                    channel: $SNAP_VERSION
            wait: yes
            channel: $JUJU_DEPLOY_CHANNEL
    tags: [nvidia]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.13/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-nvidia
    before-script:
      - juju:
          cloud: $JUJU_CLOUD
          controller: $JUJU_CONTROLLER
          model: $JUJU_MODEL
          bootstrap:
            debug: no
            replace-controller: yes
            model-default:
              - test-mode=true
          deploy:
            reuse: no
            bundle: $JUJU_DEPLOY_BUNDLE
            overlay: |
              applications:
                kubernetes-master:
                  constraints: cores=2 mem=8G root-disk=16G
                  options:
                    channel: $SNAP_VERSION
                kubernetes-worker:
                  constraints: instance-type=p2.xlarge
                  options:
                    channel: $SNAP_VERSION
            wait: yes
            channel: $JUJU_DEPLOY_CHANNEL
    tags: [nvidia]

meta:
  name: Verify CK
  synopsis:
    - summary: Running the base validation suite against a deployed Kubernetes
      code: |
        ```
        # edit spec.yml and update the appropriate vars under the `env:` section
        > ogc --spec jobs/validate/spec.yml -t core
        ```
  description: |
    Verifies that CK passes integration tests
  mkdocs:
    destination:
      - "validations/ck/index.md"
