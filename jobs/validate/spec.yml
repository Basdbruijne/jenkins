setup:
  - juju:
      description: Bootstrap and deploy kubernetes
      cloud: $JUJU_CLOUD
      controller: $JUJU_CONTROLLER
      model: $JUJU_MODEL
      bootstrap:
        debug: no
        constraints: $JUJU_BOOTSTRAP_CONSTRAINTS
        model-default:
          - test-mode=true
        replace-controller: yes
        disable-add-model: no
      deploy:
        bundle: charmed-kubernetes
        channel: $JUJU_DEPLOY_CHANNEL
        overlay: |
          applications:
            kubernetes-master:
              options:
                channel: $SNAP_VERSION
            kubernetes-worker:
              options:
                channel: $SNAP_VERSION
        wait: yes
plan:
  - runner:
      description: Run testsuite against deployed CK
      script: |
        #!/bin/bash
        set -eux
        pytest jobs/integration/validation.py \
             --cloud $JUJU_CLOUD \
             --controller $JUJU_CONTROLLER \
             --model $JUJU_MODEL
  # - runner:
  #     description: Performs an upgrade validation against a deployed CK
  #     script: |
  #       #!/bin/bash
  #       set -eux
  #       pytest jobs/integration/validation.py \
  #            --cloud $JUJU_CLOUD \
  #            --controller $JUJU_CONTROLLER \
  #            --model $JUJU_MODEL \
  #            --is-upgrade \
  #            --upgrade-charm-channel $TEST_UPGRADE_CHARM_CHANNEL \
  #            --upgrade-snap-channel $TEST_UPGRADE_SNAP_CHANNEL
teardown:
  - runner:
      description: Get CDK Field Agent
      script: |
        #!/bin/bash
        set -eux
        pip install git+https://github.com/juju/juju-crashdump.git
        juju-crashdump -a debug-layer -a config -m $JUJU_CONTROLLER:$JUJU_MODEL
        aws s3 sync juju-crashdump*tar.gz s3://jenkaas/$(date "+%Y/%m/%d")/
        aws s3 sync $OGC_RESULTS_PATH/*.json s3://jenkaas/$(date "+%Y/%m/%d")/
  - runner:
      description: Teardown juju deployment
      cmd: juju destroy-controller --destroy-all-models --destroy-storage -y $JUJU_CONTROLLER


meta:
  name: Verify CK
  description: |
    Verifies that CK passes integration tests
  examples:
    - synopsis: Listing tasks that can be run
      code: |
        ```
        > ogc --spec spec.yml tasks

        Task                                                  Phase     Tags
        ----------------------------------------------------  --------  -----------------------------------------------------------
        Performs a snapd channel upgrade                      setup     validate-snapd-upgrade
        Bootstrap and deploy kubernetes                       setup     validate, validate-snapd-upgrade, validate-upgrade
        Run testsuite against deployed CK                     plan      validate
        Performs an upgrade validation against a deployed CK  plan      validate-upgrade
        Run testsuite against an upgrade snapcore             plan      validate-snapd-upgrade
        Teardown juju deployment                              teardown  destroy, validate, validate-snapd-upgrade, validate-upgrade
        Reset snapd back to stable                            teardown  validate-snapd-upgrade

          Example:

          > JUJU_CONTROLLER=my-controller ogc --spec spec.yml \
              execute --phase teardown -t destroy
        ```
    - synopsis: Running the base validation suite against a deploy Kubernetes
      code: |
        ```
        > JUJU_CLOUD=aws/us-east-1 JUJU_CONTROLLER=my-controller JUJU_MODEL=my-model \
              ogc --spec spec.yml execute -t validate
        ```
  jenkins-job-builder:
    job-source: ../validate.yaml
  mkdocs:
    destination:
      - "validations/ck/index.md"
