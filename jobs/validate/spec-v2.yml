meta:
  name: Verify CK
  synopsis:
    - summary: Running the base validation suite against a deployed Kubernetes
      code: |
        ```
        # edit spec.yml and update the appropriate vars under the `env:` section
        > ogc --spec jobs/validate/spec.yml -t core
        ```
  description: |
    Verifies that CK passes integration tests
  mkdocs:
    destination:
      - "validations/ck/index.md"

matrix:
  snap_version:
    - 1.18/edge
    - 1.17/edge
    - 1.16/edge
    - 1.15/edge
  series:
    - focal
    - bionic
    - xenial
  channel:
    - edge
  arch:
    - amd64

plan:
  env:
    - JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
    - JUJU_DEPLOY_CHANNEL=$CHANNEL
    - JUJU_CLOUD=aws/us-east-1
    - JUJU_CONTROLLER=validate-ck
    - JUJU_MODEL=validate-model

  execute: |
    #!/bin/bash
    set -x

    export JUJU_CONTROLLER="$JUJU_CONTROLLER-$(uuid -v4 | cut -f1 -d-)"

    echo "PYTHON PATH"
    echo $PYTHONPATH
    pwd
    echo "PYTHON PATH"

    $HOME/venv/bin/python3 $WORKSPACE/jobs/infra/collect-debug.py set-key 'job_name_custom' "validate-ck-$SERIES-$SNAP_VERSION"

    juju bootstrap $JUJU_CLOUD $JUJU_CONTROLLER \
         -d $JUJU_MODEL \
         --bootstrap-series $SERIES \
         --force \
         --bootstrap-constraints arch=$ARCH \
         --model-default test-mode=true \
         --model-default resource-tags=owner=k8sci

    tee overlay.yaml <<EOF> /dev/null
    applications:
      kubernetes-master:
        options:
          channel: $SNAP_VERSION
      kubernetes-worker:
        options:
          channel: $SNAP_VERSION
    EOF

    juju deploy -m $JUJU_CONTROLLER:$JUJU_MODEL \
          --overlay overlay.yaml \
          --channel $JUJU_DEPLOY_CHANNEL $JUJU_DEPLOY_BUNDLE

    juju-wait -e $JUJU_CONTROLLER:$JUJU_MODEL -w

    $HOME/venv/bin/pytest -m "not slow" jobs/integration/validation.py \
       --cloud $JUJU_CLOUD \
       --model $JUJU_MODEL \
       --controller $JUJU_CONTROLLER

    wget https://raw.githubusercontent.com/juju-solutions/cdk-field-agent/master/collect.py
    $HOME/venv/bin/python3 collect.py -m $JUJU_CONTROLLER:$JUJU_MODEL

    $HOME/venv/bin/python3 $WORKSPACE/jobs/infra/collect-debug.py push 'cdk_field_agent' results*.tar.gz
    $HOME/venv/bin/python3 $WORKSPACE/jobs/infra/collect-debug.py push 'build_log' ogc.log
    $HOME/venv/bin/python3 $WORKSPACE/jobs/infra/collect-debug.py push 'metadata' metadata.json
    $HOME/venv/bin/python3 $WORKSPACE/jobs/infra/collect-debug.py push 'job_result' *job.json
    $HOME/venv/bin/python3 $WORKSPACE/jobs/infra/collect-debug.py set-key 'snap_version' "$SNAP_VERSION"
    $HOME/venv/bin/python3 $WORKSPACE/jobs/infra/collect-debug.py set-key 'juju_deploy_channel' "$JUJU_DEPLOY_CHANNEL"
    $HOME/venv/bin/python3 $WORKSPACE/jobs/infra/collect-debug.py save-meta

    juju destroy-controller -y --destroy-all-models --destroy-storage $JUJU_CONTROLLER
