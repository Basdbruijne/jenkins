meta:
  name: Verify CK on Localhost
  description: |
    Verifies that CK on localhost passes integration tests
  mkdocs:
    destination:
      - "validations/ck/localhost.md"

matrix:
  snap_version:
    - 1.18/edge
    - 1.17/edge
    - 1.16/edge
    - 1.15/edge
  series:
    - focal
    - bionic
    - xenial
  channel:
    - edge

plan:
  env:
    - JUJU_CONTROLLER=validate-ck-localhost
    - JUJU_MODEL=validate-localhost
  pre-execute: |
    #!/bin/bash
    . $WORKSPACE/cilib.sh

    setup_env
  post-execute: |
    #!/bin/bash
    set -x

    . $WORKSPACE/cilib.sh

    inject_env

    juju ssh -m "$JUJU_CONTROLLER":"$JUJU_MODEL" --pty=true ubuntu/0 -- juju-crashdump -a debug-layer -a config -m "$JUJU_CONTROLLER:$JUJU_MODEL"

    juju scp -m "$JUJU_CONTROLLER":"$JUJU_MODEL" ubuntu/0:results*.tar.gz . || true

    teardown_env

  execute: |
    #!/bin/bash
    set -eu

    . $WORKSPACE/cilib.sh

    inject_env

    export JUJU_DEPLOY_CHANNEL=edge

    juju bootstrap aws/us-east-2 $JUJU_CONTROLLER \
         -d $JUJU_MODEL \
         --bootstrap-series $SERIES \
         --force \
         --bootstrap-constraints arch="amd64" \
         --model-default test-mode=true \
         --model-default resource-tags=owner=k8sci \
         --model-default image-stream=daily

    juju deploy -m $JUJU_CONTROLLER:$JUJU_MODEL \
        --series $SERIES \
        --force \
        --constraints "mem=32G root-disk=100G cores=16" \
        ubuntu

    timeout 45m juju-wait -e $JUJU_CONTROLLER:$JUJU_MODEL -w


    ansible-playbook -i $(unitAddress ubuntu), \
                     --ssh-common-args '-o StrictHostKeyChecking=no' \
                     --key-file /var/lib/jenkins/.local/share/juju/ssh/juju_id_rsa \
                     -u ubuntu \
                     $WORKSPACE/jobs/validate/playbooks/single-system.yml


    tee overlay.yaml <<EOF> /dev/null
    series: $SERIES
    applications:
      kubernetes-master:
        options:
          channel: $SNAP_VERSION
      kubernetes-worker:
        options:
          channel: $SNAP_VERSION
    EOF


    tee setup <<EOF> /dev/null
    #!/bin/bash
    set -eux
    export PATH=/snap/bin:$PATH

    juju bootstrap localhost/localhost \
        $JUJU_CONTROLLER \
        -d $JUJU_MODEL \
        --bootstrap-series $SERIES \
        --force \
        --model-default image-stream=daily 1>&2

    juju deploy -m "$JUJU_CONTROLLER":"$JUJU_MODEL" \
        --channel $JUJU_DEPLOY_CHANNEL \
        --force \
        --overlay overlay.yaml \
        cs:~containers/charmed-kubernetes 1>&2

    timeout 45m juju-wait -e $JUJU_CONTROLLER:$JUJU_MODEL -w

    pushd jenkins
    timeout 2h pytest -m "not slow" jobs/integration/validation.py \
        --cloud localhost/localhost \
        --model $JUJU_MODEL \
        --controller $JUJU_CONTROLLER
    popd

    EOF

    chmod +x setup
    juju scp -m "$JUJU_CONTROLLER":"$JUJU_MODEL" setup ubuntu/0:setup
    juju scp -m "$JUJU_CONTROLLER":"$JUJU_MODEL" overlay.yaml ubuntu/0:overlay.yaml
    juju ssh -m "$JUJU_CONTROLLER":"$JUJU_MODEL" --pty=true ubuntu/0 -- 'bash setup'
