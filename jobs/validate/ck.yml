plan:
  - &BASE_JOB
    env:
      - SNAP_VERSION=1.16/edge
      - JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
      - JUJU_DEPLOY_CHANNEL=edge
      - JUJU_CLOUD=aws/us-east-2
      - JUJU_CONTROLLER=validate-ck
      - JUJU_MODEL=validate-model
    install:
      - pip install -rrequirements.txt
      - pip install -rrequirements_test.txt
      - pip install git+https://github.com/juju/juju-crashdump.git
      - sudo apt install -qyf build-essential
      - sudo snap install charm --edge --classic
      - sudo snap install juju --classic
      - sudo snap install aws-cli --classic
    before-script:
      - juju:
          cloud: $JUJU_CLOUD
          controller: $JUJU_CONTROLLER
          model: $JUJU_MODEL
          bootstrap:
            debug: no
            replace-controller: yes
            model-default:
              - test-mode=true
          deploy:
            reuse: no
            bundle: $JUJU_DEPLOY_BUNDLE
            overlay: |
              applications:
                kubernetes-master:
                  options:
                    channel: $SNAP_VERSION
                kubernetes-worker:
                  options:
                    channel: $SNAP_VERSION
            wait: yes
            channel: $JUJU_DEPLOY_CHANNEL
    script:
      - |
        #!/bin/bash
        set -eux
        pytest jobs/integration/validation.py \
                 --cloud $JUJU_CLOUD \
                 --controller $JUJU_CONTROLLER \
                 --model $JUJU_MODEL
    after-script:
      - juju-crashdump -a debug-layer -a config -m $JUJU_CONTROLLER:$JUJU_MODEL
      - /snap/bin/aws s3 cp *.log s3://jenkaas/$JUJU_DEPLOY_BUNDLE/$(date +"%Y/%m/%d")/$SNAP_VERSION/
      - /snap/bin/aws s3 cp *.json s3://jenkaas/$JUJU_DEPLOY_BUNDLE/$(date +"%Y/%m/%d")/$SNAP_VERSION/
      - /snap/bin/aws s3 cp juju-crashdump* s3://jenkaas/$JUJU_DEPLOY_BUNDLE/$(date +"%Y/%m/%d")/$SNAP_VERSION/
      - juju destroy-controller -y --destroy-all-models --destroy-storage $JUJU_CONTROLLER
    tags: [core]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.15/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
    tags: [core]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.14/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
    tags: [core]
  - <<: *BASE_JOB
    env:
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - SNAP_VERSION=1.13/edge
    tags: [core]

  # vault
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.16/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-vault
    tags: [vault]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.15/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-vault
    tags: [vault]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.14/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-vault
    tags: [vault]
  - <<: *BASE_JOB
    env:
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-vault
      - SNAP_VERSION=1.13/edge
    tags: [vault]

  # ceph
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.16/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-ceph
    script:
      - pytest jobs/integration/test_ceph.py::test_ceph
    tags: [ceph]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.15/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-ceph
    script:
      - pytest jobs/integration/test_ceph.py::test_ceph
    tags: [ceph]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.14/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-ceph
    script:
      - pytest jobs/integration/test_ceph.py::test_ceph
    tags: [ceph]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.13/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-ceph
    script:
      - pytest jobs/integration/test_ceph.py::test_ceph
    tags: [ceph]

  # nvidia
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.16/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-nvidia
    before-script:
      - juju:
          cloud: $JUJU_CLOUD
          controller: $JUJU_CONTROLLER
          model: $JUJU_MODEL
          bootstrap:
            debug: no
            replace-controller: yes
            model-default:
              - test-mode=true
          deploy:
            reuse: no
            bundle: $JUJU_DEPLOY_BUNDLE
            overlay: |
              applications:
                kubernetes-master:
                  constraints: cores=2 mem=8G root-disk=16G
                  options:
                    channel: $SNAP_VERSION
                kubernetes-worker:
                  constraints: instance-type=p2.xlarge
                  options:
                    channel: $SNAP_VERSION
            wait: yes
            channel: $JUJU_DEPLOY_CHANNEL
    tags: [nvidia]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.15/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-nvidia
    before-script:
      - juju:
          cloud: $JUJU_CLOUD
          controller: $JUJU_CONTROLLER
          model: $JUJU_MODEL
          bootstrap:
            debug: no
            replace-controller: yes
            model-default:
              - test-mode=true
          deploy:
            reuse: no
            bundle: $JUJU_DEPLOY_BUNDLE
            overlay: |
              applications:
                kubernetes-master:
                  constraints: cores=2 mem=8G root-disk=16G
                  options:
                    channel: $SNAP_VERSION
                kubernetes-worker:
                  constraints: instance-type=p2.xlarge
                  options:
                    channel: $SNAP_VERSION
            wait: yes
            channel: $JUJU_DEPLOY_CHANNEL
    tags: [nvidia]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.14/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-nvidia
    before-script:
      - juju:
          cloud: $JUJU_CLOUD
          controller: $JUJU_CONTROLLER
          model: $JUJU_MODEL
          bootstrap:
            debug: no
            replace-controller: yes
            model-default:
              - test-mode=true
          deploy:
            reuse: no
            bundle: $JUJU_DEPLOY_BUNDLE
            overlay: |
              applications:
                kubernetes-master:
                  constraints: cores=2 mem=8G root-disk=16G
                  options:
                    channel: $SNAP_VERSION
                kubernetes-worker:
                  constraints: instance-type=p2.xlarge
                  options:
                    channel: $SNAP_VERSION
            wait: yes
            channel: $JUJU_DEPLOY_CHANNEL
    tags: [nvidia]
  - <<: *BASE_JOB
    env:
      - SNAP_VERSION=1.13/edge
      - JUJU_DEPLOY_BUNDLE=charmed-kubernetes
      - JUJU_MODEL=validate-nvidia
    before-script:
      - juju:
          cloud: $JUJU_CLOUD
          controller: $JUJU_CONTROLLER
          model: $JUJU_MODEL
          bootstrap:
            debug: no
            replace-controller: yes
            model-default:
              - test-mode=true
          deploy:
            reuse: no
            bundle: $JUJU_DEPLOY_BUNDLE
            overlay: |
              applications:
                kubernetes-master:
                  constraints: cores=2 mem=8G root-disk=16G
                  options:
                    channel: $SNAP_VERSION
                kubernetes-worker:
                  constraints: instance-type=p2.xlarge
                  options:
                    channel: $SNAP_VERSION
            wait: yes
            channel: $JUJU_DEPLOY_CHANNEL
    tags: [nvidia]

meta:
  name: Verify CK
  description: |
    Verifies that CK passes integration tests
  examples:
    - synopsis: Listing tasks that can be run
      code: |
        ```
        > ogc --spec spec.yml tasks

        Task                                                  Phase     Tags
        ----------------------------------------------------  --------  -----------------------------------------------------------
        Performs a snapd channel upgrade                      setup     validate-snapd-upgrade
        Bootstrap and deploy kubernetes                       setup     validate, validate-snapd-upgrade, validate-upgrade
        Run testsuite against deployed CK                     plan      validate
        Performs an upgrade validation against a deployed CK  plan      validate-upgrade
        Run testsuite against an upgrade snapcore             plan      validate-snapd-upgrade
        Teardown juju deployment                              teardown  destroy, validate, validate-snapd-upgrade, validate-upgrade
        Reset snapd back to stable                            teardown  validate-snapd-upgrade

          Example:

          > JUJU_CONTROLLER=my-controller ogc --spec spec.yml \
              execute --phase teardown -t destroy
        ```
    - synopsis: Running the base validation suite against a deploy Kubernetes
      code: |
        ```
        > JUJU_CLOUD=aws/us-east-1 JUJU_CONTROLLER=my-controller JUJU_MODEL=my-model \
              ogc --spec spec.yml execute -t validate
        ```
  jenkins-job-builder:
    job-source: ../validate.yaml
  mkdocs:
    destination:
      - "validations/ck/index.md"
